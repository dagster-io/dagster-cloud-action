name: "Parse Dagster Cloud workspace"
description: "Loads Dagster Cloud build info from a dagster-cloud.yaml file."
inputs:
  dagster_cloud_file:
    required: true
    description: "The location of the dagster-cloud.yaml file."
outputs:
  build_info:
    description: "A JSON list representing each location to be built."
    value: ${{ steps.load_workspace_file.outputs.build_info }}
  secrets_set:
    description: "A boolean checking if the required secrets have been set."
    value: ${{ steps.load_workspace_file.outputs.secrets_set }}
runs:
  using: "composite"
  steps:
    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}

    - id: load_workspace_file
      shell: bash
      run: |
        python -c "
        import yaml, json
        import os

        workspace = '${{ inputs.dagster_cloud_file }}'
        secrets_set = bool(os.getenv('DAGSTER_CLOUD_API_TOKEN'))

        with open(workspace) as f:
            workspace_contents = f.read()
        workspace_contents_yaml = yaml.safe_load(workspace_contents)

        base_dir = os.path.abspath(os.path.dirname(workspace))

        output_obj = [
            {
                'name': location['location_name'],
                'directory': os.path.join(base_dir, location.get('build', {'directory': '.'}).get('directory')),
                'build_folder': os.path.join(base_dir, location.get('build', {'directory': '.'}).get('directory')),
                'registry': location.get('build', {'directory': '.'}).get('registry'),
                'location_file': str(workspace),
            }
            for location in workspace_contents_yaml['locations']
        ]
        print(f'::set-output name=build_info::{json.dumps(output_obj)}')
        print(f'::set-output name=secrets_set::{json.dumps(secrets_set)}')
        "
