name: "Dagster Serverless Prod Deploy"
description: "Pushes code locations to Dagster Cloud serverless prod deployment"
inputs:
  organization_id:
    description: "Dagster Cloud organization ID"
    required: true
  dagster_cloud_api_token:
    description: "Dagster Cloud API token"
    required: true
  location:
    required: true
    description: 'The code location to deploy. A JSON string consisting of keys "name", "directory", "registry", "location_file".'
  env_vars:
    required: false
    description: "A JSON string of environment variables to store in the deployed code location image."
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    - name: Get serverless organization info
      uses: dagster-io/dagster-cloud-action/actions/utils/registry_info@main
      with:
        organization_id: ${{ inputs.organization_id }}
        deployment: prod
      env:
        DAGSTER_CLOUD_API_TOKEN: ${{ inputs.dagster_cloud_api_token }}
    - name: Login to ECR
      run: echo "${{ env.AWS_ECR_PASSWORD }}" | docker login --username ${{ env.AWS_ECR_USERNAME }} --password-stdin ${{  env.REGISTRY_URL  }}
      shell: bash
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Copy user code template file
      uses: dagster-io/dagster-cloud-action/actions/utils/copy_template@yuhan/08-07-use_--mount_type_cache_to_explicitly_cache_pip_downloads
      with:
        target_directory: ${{ fromJson(inputs.location).directory }}
        env_vars: ${{ inputs.env_vars }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: ${{ fromJson(inputs.location).directory }}
        push: true
        tags: "${{ env.REGISTRY_URL }}:${{ github.sha }}"
        labels: |
          branch=${{ github.head_ref }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    - name: Move cache
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      shell: bash
      run: |
        ls /tmp/.buildx-cache
        ls /tmp/.buildx-cache-new
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Deploy to Dagster Cloud
      uses: dagster-io/dagster-cloud-action/actions/utils/deploy@main
      id: deploy
      with:
        organization_id: ${{ inputs.organization_id }}
        deployment: prod
        pr: "${{ github.event.number }}"
        location: ${{ inputs.location }}
        image_tag: ${{ github.sha }}
        registry: ${{ env.REGISTRY_URL }}
      env:
        DAGSTER_CLOUD_API_TOKEN: ${{ inputs.dagster_cloud_api_token }}
