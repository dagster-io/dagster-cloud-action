stages:
  - setup
  - build
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

parse-workspace:
  stage: setup
  image: ghcr.io/dagster-io/dagster-cloud-action:0.1.24
  script:
    - python /gitlab_action/parse_workspace.py dagster_cloud.yaml >> build.env
    - cp /Dockerfile.template .
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - Dockerfile.template
    expire_in: 1 week

fetch-registry-info:
  stage: setup
  image: ghcr.io/dagster-io/dagster-cloud-action:0.1.24
  script: dagster-cloud serverless registry-info --url $DAGSTER_CLOUD_URL/prod --api-token $DAGSTER_CLOUD_API_TOKEN | grep '=' >> registry.env
  artifacts:
    reports:
      dotenv: registry.env

build-image:
  stage: build
  dependencies:
    - parse-workspace
    - fetch-registry-info
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $AWS_ECR_PASSWORD | docker login --username $AWS_ECR_USERNAME --password-stdin $REGISTRY_URL
  script:
    - echo "FROM python:3.8-slim" > $DAGSTER_CLOUD_LOCATION_DIR/Dockerfile
    - cat Dockerfile.template >> $DAGSTER_CLOUD_LOCATION_DIR/Dockerfile
    - docker build $DAGSTER_CLOUD_LOCATION_DIR -t $REGISTRY_URL:prod-$DAGSTER_CLOUD_LOCATION_NAME-$CI_COMMIT_SHA
    - docker push $REGISTRY_URL:prod-$DAGSTER_CLOUD_LOCATION_NAME-$CI_COMMIT_SHA

deploy-docker:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-image
    - parse-workspace
    - fetch-registry-info
  image: ghcr.io/dagster-io/dagster-cloud-action:0.1.24
  script:
    - dagster-cloud workspace add-location
      --url $DAGSTER_CLOUD_URL/prod
      --api-token $DAGSTER_CLOUD_API_TOKEN
      --location-file dagster_cloud.yaml
      --location-name $DAGSTER_CLOUD_LOCATION_NAME
      --image $REGISTRY_URL:prod-$DAGSTER_CLOUD_LOCATION_NAME-$CI_COMMIT_SHA
      --location-load-timeout 3600
      --agent-heartbeat-timeout 600
      --commit-hash $CI_COMMIT_SHA
      --git-url $CI_PROJECT_URL/-/commit/$CI_COMMIT_SHA

deploy-docker-branch:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  dependencies:
    - build-image
    - parse-workspace
    - fetch-registry-info
  image: ghcr.io/dagster-io/dagster-cloud-action:0.1.24
  script:
    - export PR_TIMESTAMP=$(git log -1 --format='%cd' --date=unix)
    - export PR_MESSAGE=$(git log -1 --format='%s')
    - export PR_EMAIL=$(git log -1 --format='%ae')
    - export PR_NAME=$(git log -1 --format='%an')
    - export DEPLOYMENT_NAME=$(dagster-cloud branch-deployment create-or-update
      --url $DAGSTER_CLOUD_URL
      --api-token $DAGSTER_CLOUD_API_TOKEN
      --git-repo-name $CI_PROJECT_NAME
      --branch-name $CI_COMMIT_REF_NAME
      --branch-url "${CI_PROJECT_URL}/-/tree/${CI_COMMIT_REF_NAME}"
      --pull-request-url "${CI_PROJECT_URL}/-/merge_requests/${CI_MERGE_REQUEST_IID}"
      --pull-request-id $CI_MERGE_REQUEST_IID
      --commit-hash $CI_COMMIT_SHORT_SHA
      --timestamp $PR_TIMESTAMP
      --commit-message "${PR_MESSAGE}"
      --author-name "${PR_NAME}"
      --author-email $PR_EMAIL)
    - dagster-cloud workspace add-location
      --url $DAGSTER_CLOUD_URL/$DEPLOYMENT_NAME
      --api-token $DAGSTER_CLOUD_API_TOKEN
      --location-file dagster_cloud.yaml
      --location-name $DAGSTER_CLOUD_LOCATION_NAME
      --image $REGISTRY_URL:prod-$DAGSTER_CLOUD_LOCATION_NAME-$CI_COMMIT_SHA
      --location-load-timeout 3600
      --agent-heartbeat-timeout 600
      --commit-hash $CI_COMMIT_SHA
      --git-url $CI_PROJECT_URL/-/commit/$CI_COMMIT_SHA
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    on_stop: close_branch

close_branch:
  stage: deploy
  image: ghcr.io/dagster-io/dagster-cloud-action:0.1.24
  when: manual
  only:
    - merge_requests
  script:
    - export PR_TIMESTAMP=$(git log -1 --format='%cd' --date=unix)
    - dagster-cloud branch-deployment create-or-update
      --url $DAGSTER_CLOUD_URL
      --api-token $DAGSTER_CLOUD_API_TOKEN
      --git-repo-name $CI_PROJECT_NAME
      --branch-name $CI_COMMIT_REF_NAME
      --branch-url "${CI_PROJECT_URL}/-/tree/${CI_COMMIT_REF_NAME}"
      --pull-request-url "${CI_PROJECT_URL}/-/merge_requests/${CI_MERGE_REQUEST_IID}"
      --pull-request-id $CI_MERGE_REQUEST_IID
      --pull-request-status "CLOSED"
      --commit-hash $CI_COMMIT_SHORT_SHA
      --timestamp $PR_TIMESTAMP
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    action: stop
